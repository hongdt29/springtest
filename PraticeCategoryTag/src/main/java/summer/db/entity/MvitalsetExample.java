package summer.db.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class MvitalsetExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    public MvitalsetExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andManagerNoIsNull() {
            addCriterion("manager_no is null");
            return (Criteria) this;
        }

        public Criteria andManagerNoIsNotNull() {
            addCriterion("manager_no is not null");
            return (Criteria) this;
        }

        public Criteria andManagerNoEqualTo(Integer value) {
            addCriterion("manager_no =", value, "managerNo");
            return (Criteria) this;
        }

        public Criteria andManagerNoNotEqualTo(Integer value) {
            addCriterion("manager_no <>", value, "managerNo");
            return (Criteria) this;
        }

        public Criteria andManagerNoGreaterThan(Integer value) {
            addCriterion("manager_no >", value, "managerNo");
            return (Criteria) this;
        }

        public Criteria andManagerNoGreaterThanOrEqualTo(Integer value) {
            addCriterion("manager_no >=", value, "managerNo");
            return (Criteria) this;
        }

        public Criteria andManagerNoLessThan(Integer value) {
            addCriterion("manager_no <", value, "managerNo");
            return (Criteria) this;
        }

        public Criteria andManagerNoLessThanOrEqualTo(Integer value) {
            addCriterion("manager_no <=", value, "managerNo");
            return (Criteria) this;
        }

        public Criteria andManagerNoIn(List<Integer> values) {
            addCriterion("manager_no in", values, "managerNo");
            return (Criteria) this;
        }

        public Criteria andManagerNoNotIn(List<Integer> values) {
            addCriterion("manager_no not in", values, "managerNo");
            return (Criteria) this;
        }

        public Criteria andManagerNoBetween(Integer value1, Integer value2) {
            addCriterion("manager_no between", value1, value2, "managerNo");
            return (Criteria) this;
        }

        public Criteria andManagerNoNotBetween(Integer value1, Integer value2) {
            addCriterion("manager_no not between", value1, value2, "managerNo");
            return (Criteria) this;
        }

        public Criteria andTemperatureMaxIsNull() {
            addCriterion("temperature_max is null");
            return (Criteria) this;
        }

        public Criteria andTemperatureMaxIsNotNull() {
            addCriterion("temperature_max is not null");
            return (Criteria) this;
        }

        public Criteria andTemperatureMaxEqualTo(BigDecimal value) {
            addCriterion("temperature_max =", value, "temperatureMax");
            return (Criteria) this;
        }

        public Criteria andTemperatureMaxNotEqualTo(BigDecimal value) {
            addCriterion("temperature_max <>", value, "temperatureMax");
            return (Criteria) this;
        }

        public Criteria andTemperatureMaxGreaterThan(BigDecimal value) {
            addCriterion("temperature_max >", value, "temperatureMax");
            return (Criteria) this;
        }

        public Criteria andTemperatureMaxGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("temperature_max >=", value, "temperatureMax");
            return (Criteria) this;
        }

        public Criteria andTemperatureMaxLessThan(BigDecimal value) {
            addCriterion("temperature_max <", value, "temperatureMax");
            return (Criteria) this;
        }

        public Criteria andTemperatureMaxLessThanOrEqualTo(BigDecimal value) {
            addCriterion("temperature_max <=", value, "temperatureMax");
            return (Criteria) this;
        }

        public Criteria andTemperatureMaxIn(List<BigDecimal> values) {
            addCriterion("temperature_max in", values, "temperatureMax");
            return (Criteria) this;
        }

        public Criteria andTemperatureMaxNotIn(List<BigDecimal> values) {
            addCriterion("temperature_max not in", values, "temperatureMax");
            return (Criteria) this;
        }

        public Criteria andTemperatureMaxBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("temperature_max between", value1, value2, "temperatureMax");
            return (Criteria) this;
        }

        public Criteria andTemperatureMaxNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("temperature_max not between", value1, value2, "temperatureMax");
            return (Criteria) this;
        }

        public Criteria andTemperatureMinIsNull() {
            addCriterion("temperature_min is null");
            return (Criteria) this;
        }

        public Criteria andTemperatureMinIsNotNull() {
            addCriterion("temperature_min is not null");
            return (Criteria) this;
        }

        public Criteria andTemperatureMinEqualTo(BigDecimal value) {
            addCriterion("temperature_min =", value, "temperatureMin");
            return (Criteria) this;
        }

        public Criteria andTemperatureMinNotEqualTo(BigDecimal value) {
            addCriterion("temperature_min <>", value, "temperatureMin");
            return (Criteria) this;
        }

        public Criteria andTemperatureMinGreaterThan(BigDecimal value) {
            addCriterion("temperature_min >", value, "temperatureMin");
            return (Criteria) this;
        }

        public Criteria andTemperatureMinGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("temperature_min >=", value, "temperatureMin");
            return (Criteria) this;
        }

        public Criteria andTemperatureMinLessThan(BigDecimal value) {
            addCriterion("temperature_min <", value, "temperatureMin");
            return (Criteria) this;
        }

        public Criteria andTemperatureMinLessThanOrEqualTo(BigDecimal value) {
            addCriterion("temperature_min <=", value, "temperatureMin");
            return (Criteria) this;
        }

        public Criteria andTemperatureMinIn(List<BigDecimal> values) {
            addCriterion("temperature_min in", values, "temperatureMin");
            return (Criteria) this;
        }

        public Criteria andTemperatureMinNotIn(List<BigDecimal> values) {
            addCriterion("temperature_min not in", values, "temperatureMin");
            return (Criteria) this;
        }

        public Criteria andTemperatureMinBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("temperature_min between", value1, value2, "temperatureMin");
            return (Criteria) this;
        }

        public Criteria andTemperatureMinNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("temperature_min not between", value1, value2, "temperatureMin");
            return (Criteria) this;
        }

        public Criteria andHeartrateMaxIsNull() {
            addCriterion("heartrate_max is null");
            return (Criteria) this;
        }

        public Criteria andHeartrateMaxIsNotNull() {
            addCriterion("heartrate_max is not null");
            return (Criteria) this;
        }

        public Criteria andHeartrateMaxEqualTo(Integer value) {
            addCriterion("heartrate_max =", value, "heartrateMax");
            return (Criteria) this;
        }

        public Criteria andHeartrateMaxNotEqualTo(Integer value) {
            addCriterion("heartrate_max <>", value, "heartrateMax");
            return (Criteria) this;
        }

        public Criteria andHeartrateMaxGreaterThan(Integer value) {
            addCriterion("heartrate_max >", value, "heartrateMax");
            return (Criteria) this;
        }

        public Criteria andHeartrateMaxGreaterThanOrEqualTo(Integer value) {
            addCriterion("heartrate_max >=", value, "heartrateMax");
            return (Criteria) this;
        }

        public Criteria andHeartrateMaxLessThan(Integer value) {
            addCriterion("heartrate_max <", value, "heartrateMax");
            return (Criteria) this;
        }

        public Criteria andHeartrateMaxLessThanOrEqualTo(Integer value) {
            addCriterion("heartrate_max <=", value, "heartrateMax");
            return (Criteria) this;
        }

        public Criteria andHeartrateMaxIn(List<Integer> values) {
            addCriterion("heartrate_max in", values, "heartrateMax");
            return (Criteria) this;
        }

        public Criteria andHeartrateMaxNotIn(List<Integer> values) {
            addCriterion("heartrate_max not in", values, "heartrateMax");
            return (Criteria) this;
        }

        public Criteria andHeartrateMaxBetween(Integer value1, Integer value2) {
            addCriterion("heartrate_max between", value1, value2, "heartrateMax");
            return (Criteria) this;
        }

        public Criteria andHeartrateMaxNotBetween(Integer value1, Integer value2) {
            addCriterion("heartrate_max not between", value1, value2, "heartrateMax");
            return (Criteria) this;
        }

        public Criteria andHeartrateMinIsNull() {
            addCriterion("heartrate_min is null");
            return (Criteria) this;
        }

        public Criteria andHeartrateMinIsNotNull() {
            addCriterion("heartrate_min is not null");
            return (Criteria) this;
        }

        public Criteria andHeartrateMinEqualTo(Integer value) {
            addCriterion("heartrate_min =", value, "heartrateMin");
            return (Criteria) this;
        }

        public Criteria andHeartrateMinNotEqualTo(Integer value) {
            addCriterion("heartrate_min <>", value, "heartrateMin");
            return (Criteria) this;
        }

        public Criteria andHeartrateMinGreaterThan(Integer value) {
            addCriterion("heartrate_min >", value, "heartrateMin");
            return (Criteria) this;
        }

        public Criteria andHeartrateMinGreaterThanOrEqualTo(Integer value) {
            addCriterion("heartrate_min >=", value, "heartrateMin");
            return (Criteria) this;
        }

        public Criteria andHeartrateMinLessThan(Integer value) {
            addCriterion("heartrate_min <", value, "heartrateMin");
            return (Criteria) this;
        }

        public Criteria andHeartrateMinLessThanOrEqualTo(Integer value) {
            addCriterion("heartrate_min <=", value, "heartrateMin");
            return (Criteria) this;
        }

        public Criteria andHeartrateMinIn(List<Integer> values) {
            addCriterion("heartrate_min in", values, "heartrateMin");
            return (Criteria) this;
        }

        public Criteria andHeartrateMinNotIn(List<Integer> values) {
            addCriterion("heartrate_min not in", values, "heartrateMin");
            return (Criteria) this;
        }

        public Criteria andHeartrateMinBetween(Integer value1, Integer value2) {
            addCriterion("heartrate_min between", value1, value2, "heartrateMin");
            return (Criteria) this;
        }

        public Criteria andHeartrateMinNotBetween(Integer value1, Integer value2) {
            addCriterion("heartrate_min not between", value1, value2, "heartrateMin");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIsNull() {
            addCriterion("delete_flag is null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIsNotNull() {
            addCriterion("delete_flag is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagEqualTo(Boolean value) {
            addCriterion("delete_flag =", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotEqualTo(Boolean value) {
            addCriterion("delete_flag <>", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagGreaterThan(Boolean value) {
            addCriterion("delete_flag >", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagGreaterThanOrEqualTo(Boolean value) {
            addCriterion("delete_flag >=", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagLessThan(Boolean value) {
            addCriterion("delete_flag <", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagLessThanOrEqualTo(Boolean value) {
            addCriterion("delete_flag <=", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIn(List<Boolean> values) {
            addCriterion("delete_flag in", values, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotIn(List<Boolean> values) {
            addCriterion("delete_flag not in", values, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagBetween(Boolean value1, Boolean value2) {
            addCriterion("delete_flag between", value1, value2, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotBetween(Boolean value1, Boolean value2) {
            addCriterion("delete_flag not between", value1, value2, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andVersionIsNull() {
            addCriterion("version is null");
            return (Criteria) this;
        }

        public Criteria andVersionIsNotNull() {
            addCriterion("version is not null");
            return (Criteria) this;
        }

        public Criteria andVersionEqualTo(Integer value) {
            addCriterion("version =", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotEqualTo(Integer value) {
            addCriterion("version <>", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThan(Integer value) {
            addCriterion("version >", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThanOrEqualTo(Integer value) {
            addCriterion("version >=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThan(Integer value) {
            addCriterion("version <", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThanOrEqualTo(Integer value) {
            addCriterion("version <=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionIn(List<Integer> values) {
            addCriterion("version in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotIn(List<Integer> values) {
            addCriterion("version not in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionBetween(Integer value1, Integer value2) {
            addCriterion("version between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotBetween(Integer value1, Integer value2) {
            addCriterion("version not between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeIsNull() {
            addCriterion("last_update_time is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeIsNotNull() {
            addCriterion("last_update_time is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeEqualTo(Date value) {
            addCriterion("last_update_time =", value, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeNotEqualTo(Date value) {
            addCriterion("last_update_time <>", value, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeGreaterThan(Date value) {
            addCriterion("last_update_time >", value, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("last_update_time >=", value, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeLessThan(Date value) {
            addCriterion("last_update_time <", value, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("last_update_time <=", value, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeIn(List<Date> values) {
            addCriterion("last_update_time in", values, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeNotIn(List<Date> values) {
            addCriterion("last_update_time not in", values, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("last_update_time between", value1, value2, "lastUpdateTime");
            return (Criteria) this;
        }

        public Criteria andLastUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("last_update_time not between", value1, value2, "lastUpdateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mvitalset
     *
     * @mbg.generated do_not_delete_during_merge Thu Aug 31 22:38:01 JST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mvitalset
     *
     * @mbg.generated Thu Aug 31 22:38:01 JST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}